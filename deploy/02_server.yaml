apiVersion: v1
kind: Service
metadata:
  name: server
  labels:
    app: server
spec:
  selector:
    app: server
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      imagePullSecrets:
        - name: ghcr
      containers:
        - name: server
          image: busybox
          ports:
            - containerPort: 80
              name: http
          env:
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "80"
            - name: SERVER_ENCRYPTIONSECRET
              valueFrom:
                secretKeyRef:
                  name: encryption
                  key: secret
            - name: UNISWAP_ROUTERV2_ETHEREUM
              valueFrom:
                configMapKeyRef:
                  name: uniswap
                  key: router-v2-ethereum
            - name: BLOCKSTORAGE_HOST
              valueFrom:
                configMapKeyRef:
                  name: minio
                  key: host
            - name: BLOCKSTORAGE_REGION
              valueFrom:
                configMapKeyRef:
                  name: minio
                  key: region
            - name: BLOCKSTORAGE_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: root-user
            - name: BLOCKSTORAGE_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: root-password
            - name: BLOCKSTORAGE_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: minio
                  key: bucket
            - name: POSTGRES_DSN
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: dsn
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis
                  key: host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis
                  key: port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: DATADOG_HOST
              valueFrom:
                configMapKeyRef:
                  name: datadog
                  key: host
            - name: DATADOG_PORT
              valueFrom:
                configMapKeyRef:
                  name: datadog
                  key: port
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
